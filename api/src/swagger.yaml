openapi: 3.0.0

info:
  version: "1.0.0"
  title: residence-hub-api
  description: The API for the Residence Based project so that users can find their expected house and owners can meet their expected rents.

servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: http://localhost:5000/api/v1
  
tags:
  - name: Auth
    description: This is group for Auth
  - name: User
    description: This is group for User
  - name: House
    description: This is group for House
  - name: House Owner
    description: This is group for House

paths:
  /auth/signup:
      post:
        tags: [Auth]   
        description: This is a post API for creating Users. 
        requestBody:
          content:
            application/json: 
              schema:
                type: object 
                properties:
                  name: 
                    type: string 
                    example: John Doe 
                  phoneNumber: 
                    type: string
                    example: 30078498
                  password: 
                    type: string
                    example: 4ju4u44
                    
        responses:
          "201":
            description: This is a successful user creation 
            content:
              application/json:
                schema:
                  type: object 
                  properties:
                    message: 
                      type: string
                      example: User Created Successfully!
                    status: 
                      type: string
                      example: 201
                    data: 
                      type: object
                      properties:
                        id: 
                          type: string
                          example: 28394
                        name: 
                          type: string
                          example: John Doe
                        phoneNumber:
                          type: string
                          example: "0299939"
                          
          "400":
            $ref: "#/components/responses/400"
          "500":
            $ref: "#/components/responses/500"
  /auth/signin:
    post:
      tags: [Auth]
      description: This is a post API for creating Users.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: John Doe
                phoneNumber:
                  type: string
                  example: 30078498
                password:
                  type: string
                  example: 4ju4u44

      responses:
        "201":
          description: This is a successful user creation
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User Created Successfully!
                  status:
                    type: string
                    example: 201
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 28394
                      name:
                        type: string
                        example: John Doe
                      phoneNumber:
                        type: string
                        example: "0299939"

        "400":
          $ref: "#/components/responses/400"
        "500":
          $ref: "#/components/responses/500"
  /auth/signin:
    post:
      tags: [Auth]
      description: This is sign in API for users.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                phoneNumber:
                  type: string
                  example: "0988393"
                password:
                  type: string
                  example: iui9390
      responses:
        "200":
          description: user login successfully for rent.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User logged in successfully!
                  status:
                    type: string
                    example: 200
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 3893994
                      phoneNumber:
                        type: string
                        example: "08493"
                      name:
                        type: string
                        example: John Doe

        "400":
          $ref: "#/components/responses/400"

        "500":
          $ref: "#/components/responses/500"
  /set/house-rent:
    post:
      tags: [House Owner]
      description: Post a Property to give rent
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                photo:
                  type: array
                  items:
                    type: string
                  example:
                    - photo1
                    - photo2
                    - photo3
                address:
                  type: string
                  example: 9/A Block E, Lalmatia
                floor:
                  type: string
                  example: 5th
                bedRoom:
                  type: number
                  example: 3
                washRoom:
                  type: number
                  example: 2
                kitchen:
                  type: number
                  example: 1
                diningRoom:
                  type: number
                  example: 1
                tiles:
                  type: boolean
                  example: true
                electricity:
                  type: boolean
                  example: true
                gas:
                  type: boolean
                  example: true
                water:
                  type: boolean
                  example: true
                lift:
                  type: boolean
                  example: false
                garage:
                  type: boolean
                  example: true
                extraFacility:
                  type: string
                  example: North side - Dhanmondi lake
                status:
                  type: string
                  example: available
                userId:
                  type: string
                  example: 73838
                availableDate: 
                  type: string
                  example: 12-01-2023

      responses:
        "200":
          description: Property Posted for rent Successfully!
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Property Posted Successfully
                  status:
                    type: string
                    example: 200
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 3994949
                      photo:
                        type: array
                        items:
                          type: string
                        example:
                          - photo1
                          - photo2
                          - photo3
                      address:
                        type: string
                        example: 9/A Block E, Lalmatia
                      floor:
                        type: string
                        example: 5th
                      bedRoom:
                        type: number
                        example: 3
                      toilet:
                        type: number
                        example: 2
                      kitchen:
                        type: number
                        example: 1
                      diningRoom:
                        type: number
                        example: 1
                      tiles:
                        type: boolean
                        example: true
                      electricity:
                        type: boolean
                        example: true
                      gas:
                        type: boolean
                        example: true
                      water:
                        type: boolean
                        example: true
                      lift:
                        type: boolean
                        example: false
                      garage:
                        type: boolean
                        example: true
                      extraFacility:
                        type: string
                        example: North side - Dhanmondi lake
                      userId:
                        type: string
                        example: 73838
        "400":
          $ref: "#/components/responses/400"

        "500":
          $ref: "#/components/responses/500"
  /house:
    delete:
      tags: [House]
      description: Delete a Property
      parameters:
        - $ref: "#/components/parameters/userIdParameters"
        - $ref: "#/components/parameters/houseIdParameters"
      responses:
        "203":
          description: Task successfully for done.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Task done successfully!
                  status:
                    type: string
                    example: 203
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
    get:
      tags: [House]
      description: This API will serve single house data
      parameters:
        - $ref: "#/components/parameters/availableDateParameters"
        - $ref: "#/components/parameters/limitParameters"
        - $ref: "#/components/parameters/currentParameters"
        - $ref: "#/components/parameters/sortTypeParameters"
        - $ref: "#/components/parameters/sortByParameters"
      responses:
        "200":
          description: This API will return house data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully fetch
                  data:
                    type: array
                    items:
                      type: object
                    example:
                      - id: 3994949
                        photo:
                          - photo1
                          - photo2
                          - photo3
                        address: 9/A Block E, Lalmatia
                        floor: 5th
                        bedRoom: 3
                        toilet: 2
                        kitchen: 1
                        diningRoom: 1
                        tiles: true
                        electricity: true
                        gas: true
                        water: true
                        lift: false
                        garage: true
                        extraFacility: North side - Dhanmondi lake
                        userId: 73838

        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /house/{id}:
    get:
      tags: [House]
      description: This API will serve single house data
      parameters:
        - $ref: "#/components/parameters/idParam"
      responses:
        "200":
          description: This API will return house data
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully fetch
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 3994949
                      photo:
                        type: array
                        items:
                          type: string
                        example:
                          - photo1
                          - photo2
                          - photo3
                      address:
                        type: string
                        example: 9/A Block E, Lalmatia
                      floor:
                        type: string
                        example: 5th
                      bedRoom:
                        type: number
                        example: 3
                      toilet:
                        type: number
                        example: 2
                      kitchen:
                        type: number
                        example: 1
                      diningRoom:
                        type: number
                        example: 1
                      tiles:
                        type: boolean
                        example: true
                      electricity:
                        type: boolean
                        example: true
                      gas:
                        type: boolean
                        example: true
                      water:
                        type: boolean
                        example: true
                      lift:
                        type: boolean
                        example: false
                      garage:
                        type: boolean
                        example: true
                      extraFacility:
                        type: string
                        example: North side - Dhanmondi lake
                      userId:
                        type: string
                        example: 73838
                      availableDate: 
                        type: string
                        example: 12-01-2023
        "400":
          $ref: "#/components/responses/400"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /user:
    patch:
      tags: [User]
      description: Update User Profile
      parameters:
        - $ref: "#/components/parameters/userIdParameters"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                permanentAddress:
                  type: string
                  example: jhalkathi
                photo:
                  type: string
                  example: image1
                NID:
                  type: string
                  example: 849405983893
                email:
                  type: string
                  example: ab@cd.com
      responses:
        "200":
          description: user updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User Updated in successfully!
                  status:
                    type: string
                    example: 200
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 3893994
                      permanentAddress:
                        type: string
                        example: jhalkathi
                      photo:
                        type: string
                        example: image1
                      NID:
                        type: string
                        example: 849405983893
                      email:
                        type: string
                        example: ab@cd.com
        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"

    get:
      tags: [User]
      description: This API will get all users
      parameters:
        - $ref: "#/components/parameters/roleParameters"
        - $ref: "#/components/parameters/statusParameters"
      responses:
        "200":
          description: This is a successful response after successfully fetching user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully data fetch
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 3893994
                      permanentAddress:
                        type: string
                        example: jhalkathi
                      photo:
                        type: string
                        example: image1
                      NID:
                        type: string
                        example: 849405983893
                      email:
                        type: string
                        example: ab@cd.com
        "400":
          $ref: "#/components/responses/400"

        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /user/{id}:
    get:
      tags: [User]
      description: This API will retun Single User data
      parameters:
        - $ref: "#/components/parameters/idParam"
      responses:
        "200":
          description: This is a successful response after successfully fetching user data.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Successfully data fetch
                  data:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 3893994
                      permanentAddress:
                        type: string
                        example: jhalkathi
                      photo:
                        type: string
                        example: image1
                      NID:
                        type: string
                        example: 849405983893
                      email:
                        type: string
                        example: ab@cd.com
        "400":
          $ref: "#/components/responses/400"

        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"
  /user/password:
    patch:
      tags: [User]
      description: Update User Password
      parameters:
        - $ref: "#/components/parameters/userIdParameters"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  example: fj489494
                newPassword:
                  type: string
                  example: 4494u4
                confirmPassword:
                  type: string
                  example: 48484jfj

      responses:
        "200":
          description: Password updated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Password Updated in successfully!
                  status:
                    type: string
                    example: 200

        "400":
          $ref: "#/components/responses/400"
        "401":
          $ref: "#/components/responses/401"
        "404":
          $ref: "#/components/responses/404"
        "500":
          $ref: "#/components/responses/500"

components:
  parameters:
    idParam:
      in: path
      name: id
      description: this param will help to find specific data
      schema:
        type: string
        example: 123
      required: true

    userIdParameters:
      in: query
      name: userId
      schema:
        type: string
        example: 494u
    houseIdParameters:
      in: query
      name: houseId
      schema:
        type: string
        example: 893h
    availableDateParameters:
      in: query
      name: availableDate
      schema:
        type: string
        example: 12-03-2023
    limitParameters:
      in: query
      name: limit
      schema:
        type: string
        example: 10
    currentParameters:
      in: query
      name: currentPage
      schema:
        type: string
        example: 2
    sortTypeParameters:
      in: query
      name: sortType
      schema:
        type: string
        example: asy
    sortByParameters:
      in: query
      name: sortBy
      schema:
        type: string
        example: availableDate
    roleParameters:
      in: query
      name: role
      schema:
        type: string
        example: houseOwner
    statusParameters:
      in: query
      name: status
      schema:
        type: string
        example: approved

  responses:
    "400":
      description: An Error Occured
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Something Went Wrong!
              status:
                type: string
                example: 400
    "401":
      description: An Error Occured
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Unauthorized Acess!
              status:
                type: string
                example: 401
    "404":
      description: An Error Occured
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Data Not Found!
              status:
                type: string
                example: 404
    "500":
      description: An Error occured
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Server Error!
              status:
                type: string
                example: 500
